/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/captchas/inc/defer.js":
/*!**************************************!*\
  !*** ./src/js/captchas/inc/defer.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar defer = function defer() {\n  var state = false; // Resolved or not\n\n  var callbacks = [];\n\n  var resolve = function resolve(val) {\n    if (state) {\n      return;\n    }\n\n    state = true;\n\n    for (var i = 0, len = callbacks.length; i < len; i++) {\n      callbacks[i](val);\n    }\n  };\n\n  var then = function then(cb) {\n    if (!state) {\n      callbacks.push(cb);\n      return;\n    }\n\n    cb();\n  };\n\n  var deferred = {\n    resolved: function resolved() {\n      return state;\n    },\n    resolve: resolve,\n    promise: {\n      then: then\n    }\n  };\n  return deferred;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvY2FwdGNoYXMvaW5jL2RlZmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFNQSxLQUFLLEdBQUcsU0FBUkEsS0FBUSxHQUFNO0VBQ2hCLElBQUlDLEtBQUssR0FBRyxLQUFaLENBRGdCLENBQ0c7O0VBRW5CLElBQU1DLFNBQVMsR0FBRyxFQUFsQjs7RUFFQSxJQUFNQyxPQUFPLEdBQUcsU0FBVkEsT0FBVSxDQUFBQyxHQUFHLEVBQUk7SUFDbkIsSUFBSUgsS0FBSixFQUFXO01BQ1A7SUFDSDs7SUFFREEsS0FBSyxHQUFHLElBQVI7O0lBRUEsS0FBSyxJQUFJSSxDQUFDLEdBQUcsQ0FBUixFQUFXQyxHQUFHLEdBQUdKLFNBQVMsQ0FBQ0ssTUFBaEMsRUFBd0NGLENBQUMsR0FBR0MsR0FBNUMsRUFBaURELENBQUMsRUFBbEQsRUFBc0Q7TUFDbERILFNBQVMsQ0FBQ0csQ0FBRCxDQUFULENBQWFELEdBQWI7SUFDSDtFQUNKLENBVkQ7O0VBWUEsSUFBTUksSUFBSSxHQUFHLFNBQVBBLElBQU8sQ0FBQUMsRUFBRSxFQUFJO0lBQ2YsSUFBSSxDQUFDUixLQUFMLEVBQVk7TUFDUkMsU0FBUyxDQUFDUSxJQUFWLENBQWVELEVBQWY7TUFDQTtJQUNIOztJQUVEQSxFQUFFO0VBQ0wsQ0FQRDs7RUFTQSxJQUFNRSxRQUFRLEdBQUc7SUFDYkMsUUFEYSxzQkFDRjtNQUNQLE9BQU9YLEtBQVA7SUFDSCxDQUhZO0lBSWJFLE9BQU8sRUFBUEEsT0FKYTtJQUtiVSxPQUFPLEVBQUU7TUFDTEwsSUFBSSxFQUFKQTtJQURLO0VBTEksQ0FBakI7RUFVQSxPQUFPRyxRQUFQO0FBQ0gsQ0FyQ0Q7O0FBdUNBLGlFQUFlWCxLQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NhcHRjaGFzL2luYy9kZWZlci5qcz9jZDU5Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRlZmVyID0gKCkgPT4ge1xuICAgIGxldCBzdGF0ZSA9IGZhbHNlOyAvLyBSZXNvbHZlZCBvciBub3RcblxuICAgIGNvbnN0IGNhbGxiYWNrcyA9IFtdO1xuXG4gICAgY29uc3QgcmVzb2x2ZSA9IHZhbCA9PiB7XG4gICAgICAgIGlmIChzdGF0ZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgc3RhdGUgPSB0cnVlO1xuICAgICAgICBcbiAgICAgICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IGNhbGxiYWNrcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgY2FsbGJhY2tzW2ldKHZhbCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgdGhlbiA9IGNiID0+IHtcbiAgICAgICAgaWYgKCFzdGF0ZSkge1xuICAgICAgICAgICAgY2FsbGJhY2tzLnB1c2goY2IpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY2IoKTtcbiAgICB9O1xuXG4gICAgY29uc3QgZGVmZXJyZWQgPSB7XG4gICAgICAgIHJlc29sdmVkKCkge1xuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgICAgICB9LFxuICAgICAgICByZXNvbHZlLFxuICAgICAgICBwcm9taXNlOiB7XG4gICAgICAgICAgICB0aGVuLFxuICAgICAgICB9LFxuICAgIH07XG5cbiAgICByZXR1cm4gZGVmZXJyZWQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBkZWZlcjtcbiJdLCJuYW1lcyI6WyJkZWZlciIsInN0YXRlIiwiY2FsbGJhY2tzIiwicmVzb2x2ZSIsInZhbCIsImkiLCJsZW4iLCJsZW5ndGgiLCJ0aGVuIiwiY2IiLCJwdXNoIiwiZGVmZXJyZWQiLCJyZXNvbHZlZCIsInByb21pc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/captchas/inc/defer.js\n");

/***/ }),

/***/ "./src/js/captchas/inc/recaptcha.js":
/*!******************************************!*\
  !*** ./src/js/captchas/inc/recaptcha.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRecaptcha\": () => (/* binding */ createRecaptcha),\n/* harmony export */   \"recaptcha\": () => (/* binding */ recaptcha),\n/* harmony export */   \"recaptchaEnterprise\": () => (/* binding */ recaptchaEnterprise)\n/* harmony export */ });\n/* harmony import */ var _defer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defer */ \"./src/js/captchas/inc/defer.js\");\n\nvar ownProp = Object.prototype.hasOwnProperty;\nfunction createRecaptcha() {\n  var enterprise = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var deferred = (0,_defer__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // In order to handle multiple recaptchas on a page, store all renderers (promises)\n  // in a central store. When reCAPTCHA is loaded, notify all promises that it's ready.\n\n  if (!window.recaptchaRenderers) {\n    window.recaptchaRenderers = [];\n  } // Store the promise in our renderers store\n\n\n  window.recaptchaRenderers.push(deferred);\n  return {\n    notify: function notify() {\n      // Be sure to notify all renderers that reCAPTCHA is ready, as soon as at least one is ready\n      // As is - as soon as `window.grecaptcha` is available.\n      for (var i = 0, len = window.recaptchaRenderers.length; i < len; i++) {\n        window.recaptchaRenderers[i].resolve();\n      }\n    },\n    wait: function wait() {\n      return deferred.promise;\n    },\n    render: function render(ele, options, cb) {\n      this.wait().then(function () {\n        if (enterprise) {\n          cb(window.grecaptcha.enterprise.render(ele, options));\n        } else {\n          cb(window.grecaptcha.render(ele, options));\n        }\n      });\n    },\n    reset: function reset(widgetId) {\n      if (typeof widgetId === 'undefined') {\n        return;\n      }\n\n      this.assertLoaded();\n\n      if (enterprise) {\n        this.wait().then(function () {\n          return window.grecaptcha.enterprise.reset(widgetId);\n        });\n      } else {\n        this.wait().then(function () {\n          return window.grecaptcha.reset(widgetId);\n        });\n      }\n    },\n    execute: function execute(widgetId) {\n      if (typeof widgetId === 'undefined') {\n        return;\n      }\n\n      this.assertLoaded();\n\n      if (enterprise) {\n        this.wait().then(function () {\n          return window.grecaptcha.enterprise.execute(widgetId);\n        });\n      } else {\n        this.wait().then(function () {\n          return window.grecaptcha.execute(widgetId);\n        });\n      }\n    },\n    executeV3: function executeV3(siteKey) {\n      if (typeof siteKey === 'undefined') {\n        return;\n      }\n\n      this.assertLoaded();\n      return window.grecaptcha.execute(siteKey);\n    },\n    checkRecaptchaLoad: function checkRecaptchaLoad() {\n      if (ownProp.call(window, 'grecaptcha') && ownProp.call(window.grecaptcha, 'render')) {\n        this.notify();\n      }\n    },\n    assertLoaded: function assertLoaded() {\n      if (!deferred.resolved()) {\n        throw new Error('ReCAPTCHA has not been loaded');\n      }\n    }\n  };\n}\nvar recaptcha = createRecaptcha();\nvar recaptchaEnterprise = createRecaptcha(true);\n\nif (typeof window !== 'undefined') {\n  window.formieRecaptchaOnLoadCallback = recaptcha.notify;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVAsS0FBbUIsV0FBdkIsRUFBb0M7UUFDaEM7TUFDSDs7TUFFRCxLQUFLSCxZQUFMO01BQ0EsT0FBT2xCLE1BQU0sQ0FBQ2UsVUFBUCxDQUFrQkksT0FBbEIsQ0FBMEJFLE9BQTFCLENBQVA7SUFDSCxDQTFERTtJQTRESEMsa0JBNURHLGdDQTREa0I7TUFDakIsSUFBSTdCLE9BQU8sQ0FBQzhCLElBQVIsQ0FBYXZCLE1BQWIsRUFBcUIsWUFBckIsS0FBc0NQLE9BQU8sQ0FBQzhCLElBQVIsQ0FBYXZCLE1BQU0sQ0FBQ2UsVUFBcEIsRUFBZ0MsUUFBaEMsQ0FBMUMsRUFBcUY7UUFDakYsS0FBS1osTUFBTDtNQUNIO0lBQ0osQ0FoRUU7SUFrRUhlLFlBbEVHLDBCQWtFWTtNQUNYLElBQUksQ0FBQ25CLFFBQVEsQ0FBQ3lCLFFBQVQsRUFBTCxFQUEwQjtRQUN0QixNQUFNLElBQUlDLEtBQUosQ0FBVSwrQkFBVixDQUFOO01BQ0g7SUFDSjtFQXRFRSxDQUFQO0FBd0VIO0FBRU0sSUFBTUMsU0FBUyxHQUFHN0IsZUFBZSxFQUFqQztBQUNBLElBQU04QixtQkFBbUIsR0FBRzlCLGVBQWUsQ0FBQyxJQUFELENBQTNDOztBQUVQLElBQUksT0FBT0csTUFBUCxLQUFrQixXQUF0QixFQUFtQztFQUMvQkEsTUFBTSxDQUFDNEIsNkJBQVAsR0FBdUNGLFNBQVMsQ0FBQ3ZCLE1BQWpEO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvY2FwdGNoYXMvaW5jL3JlY2FwdGNoYS5qcz8zMTRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZlciBmcm9tICcuL2RlZmVyJztcblxuY29uc3Qgb3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSZWNhcHRjaGEoZW50ZXJwcmlzZSA9IGZhbHNlKSB7XG4gICAgY29uc3QgZGVmZXJyZWQgPSBkZWZlcigpO1xuXG4gICAgLy8gSW4gb3JkZXIgdG8gaGFuZGxlIG11bHRpcGxlIHJlY2FwdGNoYXMgb24gYSBwYWdlLCBzdG9yZSBhbGwgcmVuZGVyZXJzIChwcm9taXNlcylcbiAgICAvLyBpbiBhIGNlbnRyYWwgc3RvcmUuIFdoZW4gcmVDQVBUQ0hBIGlzIGxvYWRlZCwgbm90aWZ5IGFsbCBwcm9taXNlcyB0aGF0IGl0J3MgcmVhZHkuXG4gICAgaWYgKCF3aW5kb3cucmVjYXB0Y2hhUmVuZGVyZXJzKSB7XG4gICAgICAgIHdpbmRvdy5yZWNhcHRjaGFSZW5kZXJlcnMgPSBbXTtcbiAgICB9XG5cbiAgICAvLyBTdG9yZSB0aGUgcHJvbWlzZSBpbiBvdXIgcmVuZGVyZXJzIHN0b3JlXG4gICAgd2luZG93LnJlY2FwdGNoYVJlbmRlcmVycy5wdXNoKGRlZmVycmVkKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIG5vdGlmeSgpIHtcbiAgICAgICAgICAgIC8vIEJlIHN1cmUgdG8gbm90aWZ5IGFsbCByZW5kZXJlcnMgdGhhdCByZUNBUFRDSEEgaXMgcmVhZHksIGFzIHNvb24gYXMgYXQgbGVhc3Qgb25lIGlzIHJlYWR5XG4gICAgICAgICAgICAvLyBBcyBpcyAtIGFzIHNvb24gYXMgYHdpbmRvdy5ncmVjYXB0Y2hhYCBpcyBhdmFpbGFibGUuXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gd2luZG93LnJlY2FwdGNoYVJlbmRlcmVycy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5yZWNhcHRjaGFSZW5kZXJlcnNbaV0ucmVzb2x2ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHdhaXQoKSB7XG4gICAgICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW5kZXIoZWxlLCBvcHRpb25zLCBjYikge1xuICAgICAgICAgICAgdGhpcy53YWl0KCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGVudGVycHJpc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgY2Iod2luZG93LmdyZWNhcHRjaGEuZW50ZXJwcmlzZS5yZW5kZXIoZWxlLCBvcHRpb25zKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY2Iod2luZG93LmdyZWNhcHRjaGEucmVuZGVyKGVsZSwgb3B0aW9ucykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlc2V0KHdpZGdldElkKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHdpZGdldElkID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5hc3NlcnRMb2FkZWQoKTtcblxuICAgICAgICAgICAgaWYgKGVudGVycHJpc2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLndhaXQoKS50aGVuKCgpID0+IHdpbmRvdy5ncmVjYXB0Y2hhLmVudGVycHJpc2UucmVzZXQod2lkZ2V0SWQpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy53YWl0KCkudGhlbigoKSA9PiB3aW5kb3cuZ3JlY2FwdGNoYS5yZXNldCh3aWRnZXRJZCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGV4ZWN1dGUod2lkZ2V0SWQpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygd2lkZ2V0SWQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmFzc2VydExvYWRlZCgpO1xuXG4gICAgICAgICAgICBpZiAoZW50ZXJwcmlzZSkge1xuICAgICAgICAgICAgICAgIHRoaXMud2FpdCgpLnRoZW4oKCkgPT4gd2luZG93LmdyZWNhcHRjaGEuZW50ZXJwcmlzZS5leGVjdXRlKHdpZGdldElkKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMud2FpdCgpLnRoZW4oKCkgPT4gd2luZG93LmdyZWNhcHRjaGEuZXhlY3V0ZSh3aWRnZXRJZCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGV4ZWN1dGVWMyhzaXRlS2V5KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHNpdGVLZXkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmFzc2VydExvYWRlZCgpO1xuICAgICAgICAgICAgcmV0dXJuIHdpbmRvdy5ncmVjYXB0Y2hhLmV4ZWN1dGUoc2l0ZUtleSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgY2hlY2tSZWNhcHRjaGFMb2FkKCkge1xuICAgICAgICAgICAgaWYgKG93blByb3AuY2FsbCh3aW5kb3csICdncmVjYXB0Y2hhJykgJiYgb3duUHJvcC5jYWxsKHdpbmRvdy5ncmVjYXB0Y2hhLCAncmVuZGVyJykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGFzc2VydExvYWRlZCgpIHtcbiAgICAgICAgICAgIGlmICghZGVmZXJyZWQucmVzb2x2ZWQoKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignUmVDQVBUQ0hBIGhhcyBub3QgYmVlbiBsb2FkZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xufVxuXG5leHBvcnQgY29uc3QgcmVjYXB0Y2hhID0gY3JlYXRlUmVjYXB0Y2hhKCk7XG5leHBvcnQgY29uc3QgcmVjYXB0Y2hhRW50ZXJwcmlzZSA9IGNyZWF0ZVJlY2FwdGNoYSh0cnVlKTtcblxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgd2luZG93LmZvcm1pZVJlY2FwdGNoYU9uTG9hZENhbGxiYWNrID0gcmVjYXB0Y2hhLm5vdGlmeTtcbn1cbiJdLCJuYW1lcyI6WyJkZWZlciIsIm93blByb3AiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNyZWF0ZVJlY2FwdGNoYSIsImVudGVycHJpc2UiLCJkZWZlcnJlZCIsIndpbmRvdyIsInJlY2FwdGNoYVJlbmRlcmVycyIsInB1c2giLCJub3RpZnkiLCJpIiwibGVuIiwibGVuZ3RoIiwicmVzb2x2ZSIsIndhaXQiLCJwcm9taXNlIiwicmVuZGVyIiwiZWxlIiwib3B0aW9ucyIsImNiIiwidGhlbiIsImdyZWNhcHRjaGEiLCJyZXNldCIsIndpZGdldElkIiwiYXNzZXJ0TG9hZGVkIiwiZXhlY3V0ZSIsImV4ZWN1dGVWMyIsInNpdGVLZXkiLCJjaGVja1JlY2FwdGNoYUxvYWQiLCJjYWxsIiwicmVzb2x2ZWQiLCJFcnJvciIsInJlY2FwdGNoYSIsInJlY2FwdGNoYUVudGVycHJpc2UiLCJmb3JtaWVSZWNhcHRjaGFPbkxvYWRDYWxsYmFjayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/captchas/inc/recaptcha.js\n");

/***/ }),

/***/ "./src/js/captchas/recaptcha-v2-invisible.js":
/*!***************************************************!*\
  !*** ./src/js/captchas/recaptcha-v2-invisible.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FormieRecaptchaV2Invisible\": () => (/* binding */ FormieRecaptchaV2Invisible)\n/* harmony export */ });\n/* harmony import */ var _inc_recaptcha__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inc/recaptcha */ \"./src/js/captchas/inc/recaptcha.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\nvar FormieRecaptchaV2Invisible = /*#__PURE__*/function () {\n  function FormieRecaptchaV2Invisible() {\n    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, FormieRecaptchaV2Invisible);\n\n    this.formId = settings.formId;\n    this.siteKey = settings.siteKey;\n    this.badge = settings.badge;\n    this.language = settings.language;\n    this.recaptchaScriptId = 'FORMIE_RECAPTCHA_SCRIPT'; // Fetch and attach the script only once - this is in case there are multiple forms on the page.\n    // They all go to a single callback which resolves its loaded state\n\n    if (!document.getElementById(this.recaptchaScriptId)) {\n      var $script = document.createElement('script');\n      $script.id = this.recaptchaScriptId;\n      $script.src = 'https://www.recaptcha.net/recaptcha/api.js?onload=formieRecaptchaOnLoadCallback&render=explicit&hl=' + this.language;\n      $script.async = true;\n      $script.defer = true;\n      document.body.appendChild($script);\n    } // Wait for/ensure recaptcha script has been loaded\n\n\n    _inc_recaptcha__WEBPACK_IMPORTED_MODULE_0__.recaptcha.checkRecaptchaLoad();\n    this.$form = document.querySelector('#' + this.formId);\n\n    if (!this.$form) {\n      console.error('Unable to find form #' + this.formId);\n      return;\n    } // We can have multiple captchas per form, so store them and render only when we need\n\n\n    this.$placeholders = this.$form.querySelectorAll('.formie-recaptcha-placeholder');\n\n    if (!this.$placeholders.length) {\n      console.error('Unable to find any ReCAPTCHA placeholders for #' + this.formId);\n      return;\n    } // Render the captcha for just this page\n\n\n    this.renderCaptcha(); // Attach a custom event listener on the form\n\n    this.$form.addEventListener('onFormieCaptchaValidate', this.onValidate.bind(this));\n    this.$form.addEventListener('onAfterFormieSubmit', this.onAfterSubmit.bind(this));\n  }\n\n  _createClass(FormieRecaptchaV2Invisible, [{\n    key: \"renderCaptcha\",\n    value: function renderCaptcha() {\n      var _this = this;\n\n      // Default to the first placeholder available.\n      // eslint-disable-next-line\n      this.$placeholder = this.$placeholders[0]; // Get the active page\n\n      var $currentPage = null;\n\n      if (this.$form.form.formTheme) {\n        // eslint-disable-next-line\n        $currentPage = this.$form.form.formTheme.$currentPage;\n      } // Get the current page's captcha\n\n\n      this.$placeholders.forEach(function ($placeholder) {\n        if ($currentPage && $currentPage.contains($placeholder)) {\n          _this.$placeholder = $placeholder;\n        }\n      });\n\n      if (this.$placeholder === null) {\n        // This is okay in some instances - notably for multi-page forms where the captcha\n        // should only be shown on the last step. But its nice to log this anyway\n        console.log('Unable to find ReCAPTCHA placeholder for #' + this.formId);\n        return;\n      } // Remove any existing token input\n\n\n      var $token = this.$form.querySelector('[name=\"g-recaptcha-response\"]');\n\n      if ($token) {\n        $token.remove();\n      } // Check if we actually need to re-render this, or just refresh it...\n\n\n      var currentRecaptchaId = this.$placeholder.getAttribute('data-recaptcha-id');\n\n      if (currentRecaptchaId !== null) {\n        this.recaptchaId = currentRecaptchaId;\n        _inc_recaptcha__WEBPACK_IMPORTED_MODULE_0__.recaptcha.reset(this.recaptchaId);\n        return;\n      } // Render the recaptcha\n\n\n      _inc_recaptcha__WEBPACK_IMPORTED_MODULE_0__.recaptcha.render(this.$placeholder, {\n        sitekey: this.siteKey,\n        badge: this.badge,\n        size: 'invisible',\n        callback: this.onVerify.bind(this),\n        'expired-callback': this.onExpired.bind(this),\n        'error-callback': this.onError.bind(this)\n      }, function (id) {\n        _this.recaptchaId = id; // Update the placeholder with our ID, in case we need to re-render it\n\n        _this.$placeholder.setAttribute('data-recaptcha-id', id); // Add a `tabindex` attribute to the iframe to prevent tabbing-to\n\n\n        var iframe = _this.$placeholder.querySelector('iframe');\n\n        if (iframe) {\n          iframe.setAttribute('tabindex', '-1');\n        }\n      });\n    }\n  }, {\n    key: \"onValidate\",\n    value: function onValidate(e) {\n      // Don't validate if we're going back in the form\n      // Or, if there's no captcha on this page\n      if (this.$form.goBack || this.$placeholder === null) {\n        return;\n      } // Check if the form has an invalid flag set, don't bother going further\n\n\n      if (e.detail.invalid) {\n        return;\n      }\n\n      e.preventDefault(); // Save for later to trigger real submit\n\n      this.submitHandler = e.detail.submitHandler; // Trigger recaptcha\n\n      _inc_recaptcha__WEBPACK_IMPORTED_MODULE_0__.recaptcha.execute(this.recaptchaId);\n    }\n  }, {\n    key: \"onVerify\",\n    value: function onVerify(token) {\n      // Submit the form - we've hijacked it up until now\n      if (this.submitHandler) {\n        // Call the form validation hooks first\n        if (!this.submitHandler.validate() || !this.submitHandler.afterValidate()) {\n          return;\n        }\n\n        this.submitHandler.submitForm();\n      }\n    }\n  }, {\n    key: \"onAfterSubmit\",\n    value: function onAfterSubmit(e) {\n      var _this2 = this;\n\n      // For a multi-page form, we need to remove the current captcha, then render the next pages.\n      // For a single-page form, reset the recaptcha, in case we want to fill out the form again\n      // `renderCaptcha` will deal with both cases\n      setTimeout(function () {\n        _this2.renderCaptcha();\n      }, 300);\n    }\n  }, {\n    key: \"onExpired\",\n    value: function onExpired() {\n      console.log('ReCAPTCHA has expired for #' + this.formId + ' - reloading.');\n      _inc_recaptcha__WEBPACK_IMPORTED_MODULE_0__.recaptcha.reset(this.recaptchaId);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(error) {\n      console.error('ReCAPTCHA was unable to load for #' + this.formId);\n    }\n  }]);\n\n  return FormieRecaptchaV2Invisible;\n}();\nwindow.FormieRecaptchaV2Invisible = FormieRecaptchaV2Invisible;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvY2FwdGNoYXMvcmVjYXB0Y2hhLXYyLWludmlzaWJsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBRU8sSUFBTUMsMEJBQWI7RUFDSSxzQ0FBMkI7SUFBQSxJQUFmQyxRQUFlLHVFQUFKLEVBQUk7O0lBQUE7O0lBQ3ZCLEtBQUtDLE1BQUwsR0FBY0QsUUFBUSxDQUFDQyxNQUF2QjtJQUNBLEtBQUtDLE9BQUwsR0FBZUYsUUFBUSxDQUFDRSxPQUF4QjtJQUNBLEtBQUtDLEtBQUwsR0FBYUgsUUFBUSxDQUFDRyxLQUF0QjtJQUNBLEtBQUtDLFFBQUwsR0FBZ0JKLFFBQVEsQ0FBQ0ksUUFBekI7SUFDQSxLQUFLQyxpQkFBTCxHQUF5Qix5QkFBekIsQ0FMdUIsQ0FPdkI7SUFDQTs7SUFDQSxJQUFJLENBQUNDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixLQUFLRixpQkFBN0IsQ0FBTCxFQUFzRDtNQUNsRCxJQUFJRyxPQUFPLEdBQUdGLFFBQVEsQ0FBQ0csYUFBVCxDQUF1QixRQUF2QixDQUFkO01BQ0FELE9BQU8sQ0FBQ0UsRUFBUixHQUFhLEtBQUtMLGlCQUFsQjtNQUNBRyxPQUFPLENBQUNHLEdBQVIsR0FBYyx3R0FBd0csS0FBS1AsUUFBM0g7TUFDQUksT0FBTyxDQUFDSSxLQUFSLEdBQWdCLElBQWhCO01BQ0FKLE9BQU8sQ0FBQ0ssS0FBUixHQUFnQixJQUFoQjtNQUVBUCxRQUFRLENBQUNRLElBQVQsQ0FBY0MsV0FBZCxDQUEwQlAsT0FBMUI7SUFDSCxDQWpCc0IsQ0FtQnZCOzs7SUFDQVYsd0VBQUE7SUFFQSxLQUFLbUIsS0FBTCxHQUFhWCxRQUFRLENBQUNZLGFBQVQsQ0FBdUIsTUFBTSxLQUFLakIsTUFBbEMsQ0FBYjs7SUFFQSxJQUFJLENBQUMsS0FBS2dCLEtBQVYsRUFBaUI7TUFDYkUsT0FBTyxDQUFDQyxLQUFSLENBQWMsMEJBQTBCLEtBQUtuQixNQUE3QztNQUVBO0lBQ0gsQ0E1QnNCLENBOEJ2Qjs7O0lBQ0EsS0FB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aUJBQVFwQixLQUFSLEVBQWU7TUFDWEQsT0FBTyxDQUFDQyxLQUFSLENBQWMsdUNBQXVDLEtBQUtuQixNQUExRDtJQUNIO0VBdktMOztFQUFBO0FBQUE7QUEwS0E4RCxNQUFNLENBQUNoRSwwQkFBUCxHQUFvQ0EsMEJBQXBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NhcHRjaGFzL3JlY2FwdGNoYS12Mi1pbnZpc2libGUuanM/ODlkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWNhcHRjaGEgfSBmcm9tICcuL2luYy9yZWNhcHRjaGEnO1xuXG5leHBvcnQgY2xhc3MgRm9ybWllUmVjYXB0Y2hhVjJJbnZpc2libGUge1xuICAgIGNvbnN0cnVjdG9yKHNldHRpbmdzID0ge30pIHtcbiAgICAgICAgdGhpcy5mb3JtSWQgPSBzZXR0aW5ncy5mb3JtSWQ7XG4gICAgICAgIHRoaXMuc2l0ZUtleSA9IHNldHRpbmdzLnNpdGVLZXk7XG4gICAgICAgIHRoaXMuYmFkZ2UgPSBzZXR0aW5ncy5iYWRnZTtcbiAgICAgICAgdGhpcy5sYW5ndWFnZSA9IHNldHRpbmdzLmxhbmd1YWdlO1xuICAgICAgICB0aGlzLnJlY2FwdGNoYVNjcmlwdElkID0gJ0ZPUk1JRV9SRUNBUFRDSEFfU0NSSVBUJztcblxuICAgICAgICAvLyBGZXRjaCBhbmQgYXR0YWNoIHRoZSBzY3JpcHQgb25seSBvbmNlIC0gdGhpcyBpcyBpbiBjYXNlIHRoZXJlIGFyZSBtdWx0aXBsZSBmb3JtcyBvbiB0aGUgcGFnZS5cbiAgICAgICAgLy8gVGhleSBhbGwgZ28gdG8gYSBzaW5nbGUgY2FsbGJhY2sgd2hpY2ggcmVzb2x2ZXMgaXRzIGxvYWRlZCBzdGF0ZVxuICAgICAgICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMucmVjYXB0Y2hhU2NyaXB0SWQpKSB7XG4gICAgICAgICAgICB2YXIgJHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgICAgICAgICAgJHNjcmlwdC5pZCA9IHRoaXMucmVjYXB0Y2hhU2NyaXB0SWQ7XG4gICAgICAgICAgICAkc2NyaXB0LnNyYyA9ICdodHRwczovL3d3dy5yZWNhcHRjaGEubmV0L3JlY2FwdGNoYS9hcGkuanM/b25sb2FkPWZvcm1pZVJlY2FwdGNoYU9uTG9hZENhbGxiYWNrJnJlbmRlcj1leHBsaWNpdCZobD0nICsgdGhpcy5sYW5ndWFnZTtcbiAgICAgICAgICAgICRzY3JpcHQuYXN5bmMgPSB0cnVlO1xuICAgICAgICAgICAgJHNjcmlwdC5kZWZlciA9IHRydWU7XG5cbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoJHNjcmlwdCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBXYWl0IGZvci9lbnN1cmUgcmVjYXB0Y2hhIHNjcmlwdCBoYXMgYmVlbiBsb2FkZWRcbiAgICAgICAgcmVjYXB0Y2hhLmNoZWNrUmVjYXB0Y2hhTG9hZCgpO1xuXG4gICAgICAgIHRoaXMuJGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjJyArIHRoaXMuZm9ybUlkKTtcblxuICAgICAgICBpZiAoIXRoaXMuJGZvcm0pIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuYWJsZSB0byBmaW5kIGZvcm0gIycgKyB0aGlzLmZvcm1JZCk7XG5cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFdlIGNhbiBoYXZlIG11bHRpcGxlIGNhcHRjaGFzIHBlciBmb3JtLCBzbyBzdG9yZSB0aGVtIGFuZCByZW5kZXIgb25seSB3aGVuIHdlIG5lZWRcbiAgICAgICAgdGhpcy4kcGxhY2Vob2xkZXJzID0gdGhpcy4kZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcuZm9ybWllLXJlY2FwdGNoYS1wbGFjZWhvbGRlcicpO1xuXG4gICAgICAgIGlmICghdGhpcy4kcGxhY2Vob2xkZXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignVW5hYmxlIHRvIGZpbmQgYW55IFJlQ0FQVENIQSBwbGFjZWhvbGRlcnMgZm9yICMnICsgdGhpcy5mb3JtSWQpO1xuXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBSZW5kZXIgdGhlIGNhcHRjaGEgZm9yIGp1c3QgdGhpcyBwYWdlXG4gICAgICAgIHRoaXMucmVuZGVyQ2FwdGNoYSgpO1xuXG4gICAgICAgIC8vIEF0dGFjaCBhIGN1c3RvbSBldmVudCBsaXN0ZW5lciBvbiB0aGUgZm9ybVxuICAgICAgICB0aGlzLiRmb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ29uRm9ybWllQ2FwdGNoYVZhbGlkYXRlJywgdGhpcy5vblZhbGlkYXRlLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLiRmb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ29uQWZ0ZXJGb3JtaWVTdWJtaXQnLCB0aGlzLm9uQWZ0ZXJTdWJtaXQuYmluZCh0aGlzKSk7XG4gICAgfVxuXG4gICAgcmVuZGVyQ2FwdGNoYSgpIHtcbiAgICAgICAgLy8gRGVmYXVsdCB0byB0aGUgZmlyc3QgcGxhY2Vob2xkZXIgYXZhaWxhYmxlLlxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgICAgdGhpcy4kcGxhY2Vob2xkZXIgPSB0aGlzLiRwbGFjZWhvbGRlcnNbMF07XG5cbiAgICAgICAgLy8gR2V0IHRoZSBhY3RpdmUgcGFnZVxuICAgICAgICB2YXIgJGN1cnJlbnRQYWdlID0gbnVsbDtcblxuICAgICAgICBpZiAodGhpcy4kZm9ybS5mb3JtLmZvcm1UaGVtZSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICAgICAgICAkY3VycmVudFBhZ2UgPSB0aGlzLiRmb3JtLmZvcm0uZm9ybVRoZW1lLiRjdXJyZW50UGFnZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEdldCB0aGUgY3VycmVudCBwYWdlJ3MgY2FwdGNoYVxuICAgICAgICB0aGlzLiRwbGFjZWhvbGRlcnMuZm9yRWFjaCgkcGxhY2Vob2xkZXIgPT4ge1xuICAgICAgICAgICAgaWYgKCRjdXJyZW50UGFnZSAmJiAkY3VycmVudFBhZ2UuY29udGFpbnMoJHBsYWNlaG9sZGVyKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuJHBsYWNlaG9sZGVyID0gJHBsYWNlaG9sZGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAodGhpcy4kcGxhY2Vob2xkZXIgPT09IG51bGwpIHtcbiAgICAgICAgICAgIC8vIFRoaXMgaXMgb2theSBpbiBzb21lIGluc3RhbmNlcyAtIG5vdGFibHkgZm9yIG11bHRpLXBhZ2UgZm9ybXMgd2hlcmUgdGhlIGNhcHRjaGFcbiAgICAgICAgICAgIC8vIHNob3VsZCBvbmx5IGJlIHNob3duIG9uIHRoZSBsYXN0IHN0ZXAuIEJ1dCBpdHMgbmljZSB0byBsb2cgdGhpcyBhbnl3YXlcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdVbmFibGUgdG8gZmluZCBSZUNBUFRDSEEgcGxhY2Vob2xkZXIgZm9yICMnICsgdGhpcy5mb3JtSWQpO1xuXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBSZW1vdmUgYW55IGV4aXN0aW5nIHRva2VuIGlucHV0XG4gICAgICAgIHZhciAkdG9rZW4gPSB0aGlzLiRmb3JtLnF1ZXJ5U2VsZWN0b3IoJ1tuYW1lPVwiZy1yZWNhcHRjaGEtcmVzcG9uc2VcIl0nKTtcblxuICAgICAgICBpZiAoJHRva2VuKSB7XG4gICAgICAgICAgICAkdG9rZW4ucmVtb3ZlKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDaGVjayBpZiB3ZSBhY3R1YWxseSBuZWVkIHRvIHJlLXJlbmRlciB0aGlzLCBvciBqdXN0IHJlZnJlc2ggaXQuLi5cbiAgICAgICAgdmFyIGN1cnJlbnRSZWNhcHRjaGFJZCA9IHRoaXMuJHBsYWNlaG9sZGVyLmdldEF0dHJpYnV0ZSgnZGF0YS1yZWNhcHRjaGEtaWQnKTtcblxuICAgICAgICBpZiAoY3VycmVudFJlY2FwdGNoYUlkICE9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLnJlY2FwdGNoYUlkID0gY3VycmVudFJlY2FwdGNoYUlkO1xuXG4gICAgICAgICAgICByZWNhcHRjaGEucmVzZXQodGhpcy5yZWNhcHRjaGFJZCk7XG5cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFJlbmRlciB0aGUgcmVjYXB0Y2hhXG4gICAgICAgIHJlY2FwdGNoYS5yZW5kZXIodGhpcy4kcGxhY2Vob2xkZXIsIHtcbiAgICAgICAgICAgIHNpdGVrZXk6IHRoaXMuc2l0ZUtleSxcbiAgICAgICAgICAgIGJhZGdlOiB0aGlzLmJhZGdlLFxuICAgICAgICAgICAgc2l6ZTogJ2ludmlzaWJsZScsXG4gICAgICAgICAgICBjYWxsYmFjazogdGhpcy5vblZlcmlmeS5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgJ2V4cGlyZWQtY2FsbGJhY2snOiB0aGlzLm9uRXhwaXJlZC5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgJ2Vycm9yLWNhbGxiYWNrJzogdGhpcy5vbkVycm9yLmJpbmQodGhpcyksXG4gICAgICAgIH0sIGlkID0+IHtcbiAgICAgICAgICAgIHRoaXMucmVjYXB0Y2hhSWQgPSBpZDtcblxuICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSBwbGFjZWhvbGRlciB3aXRoIG91ciBJRCwgaW4gY2FzZSB3ZSBuZWVkIHRvIHJlLXJlbmRlciBpdFxuICAgICAgICAgICAgdGhpcy4kcGxhY2Vob2xkZXIuc2V0QXR0cmlidXRlKCdkYXRhLXJlY2FwdGNoYS1pZCcsIGlkKTtcblxuICAgICAgICAgICAgLy8gQWRkIGEgYHRhYmluZGV4YCBhdHRyaWJ1dGUgdG8gdGhlIGlmcmFtZSB0byBwcmV2ZW50IHRhYmJpbmctdG9cbiAgICAgICAgICAgIGxldCBpZnJhbWUgPSB0aGlzLiRwbGFjZWhvbGRlci5xdWVyeVNlbGVjdG9yKCdpZnJhbWUnKTtcblxuICAgICAgICAgICAgaWYgKGlmcmFtZSkge1xuICAgICAgICAgICAgICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJy0xJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG9uVmFsaWRhdGUoZSkge1xuICAgICAgICAvLyBEb24ndCB2YWxpZGF0ZSBpZiB3ZSdyZSBnb2luZyBiYWNrIGluIHRoZSBmb3JtXG4gICAgICAgIC8vIE9yLCBpZiB0aGVyZSdzIG5vIGNhcHRjaGEgb24gdGhpcyBwYWdlXG4gICAgICAgIGlmICh0aGlzLiRmb3JtLmdvQmFjayB8fCB0aGlzLiRwbGFjZWhvbGRlciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIGZvcm0gaGFzIGFuIGludmFsaWQgZmxhZyBzZXQsIGRvbid0IGJvdGhlciBnb2luZyBmdXJ0aGVyXG4gICAgICAgIGlmIChlLmRldGFpbC5pbnZhbGlkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAvLyBTYXZlIGZvciBsYXRlciB0byB0cmlnZ2VyIHJlYWwgc3VibWl0XG4gICAgICAgIHRoaXMuc3VibWl0SGFuZGxlciA9IGUuZGV0YWlsLnN1Ym1pdEhhbmRsZXI7XG5cbiAgICAgICAgLy8gVHJpZ2dlciByZWNhcHRjaGFcbiAgICAgICAgcmVjYXB0Y2hhLmV4ZWN1dGUodGhpcy5yZWNhcHRjaGFJZCk7XG4gICAgfVxuXG4gICAgb25WZXJpZnkodG9rZW4pIHtcbiAgICAgICAgLy8gU3VibWl0IHRoZSBmb3JtIC0gd2UndmUgaGlqYWNrZWQgaXQgdXAgdW50aWwgbm93XG4gICAgICAgIGlmICh0aGlzLnN1Ym1pdEhhbmRsZXIpIHtcbiAgICAgICAgICAgIC8vIENhbGwgdGhlIGZvcm0gdmFsaWRhdGlvbiBob29rcyBmaXJzdFxuICAgICAgICAgICAgaWYgKCF0aGlzLnN1Ym1pdEhhbmRsZXIudmFsaWRhdGUoKSB8fCAhdGhpcy5zdWJtaXRIYW5kbGVyLmFmdGVyVmFsaWRhdGUoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5zdWJtaXRIYW5kbGVyLnN1Ym1pdEZvcm0oKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uQWZ0ZXJTdWJtaXQoZSkge1xuICAgICAgICAvLyBGb3IgYSBtdWx0aS1wYWdlIGZvcm0sIHdlIG5lZWQgdG8gcmVtb3ZlIHRoZSBjdXJyZW50IGNhcHRjaGEsIHRoZW4gcmVuZGVyIHRoZSBuZXh0IHBhZ2VzLlxuICAgICAgICAvLyBGb3IgYSBzaW5nbGUtcGFnZSBmb3JtLCByZXNldCB0aGUgcmVjYXB0Y2hhLCBpbiBjYXNlIHdlIHdhbnQgdG8gZmlsbCBvdXQgdGhlIGZvcm0gYWdhaW5cbiAgICAgICAgLy8gYHJlbmRlckNhcHRjaGFgIHdpbGwgZGVhbCB3aXRoIGJvdGggY2FzZXNcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlbmRlckNhcHRjaGEoKTtcbiAgICAgICAgfSwgMzAwKTtcbiAgICB9XG5cbiAgICBvbkV4cGlyZWQoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdSZUNBUFRDSEEgaGFzIGV4cGlyZWQgZm9yICMnICsgdGhpcy5mb3JtSWQgKyAnIC0gcmVsb2FkaW5nLicpO1xuXG4gICAgICAgIHJlY2FwdGNoYS5yZXNldCh0aGlzLnJlY2FwdGNoYUlkKTtcbiAgICB9XG5cbiAgICBvbkVycm9yKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1JlQ0FQVENIQSB3YXMgdW5hYmxlIHRvIGxvYWQgZm9yICMnICsgdGhpcy5mb3JtSWQpO1xuICAgIH1cbn1cblxud2luZG93LkZvcm1pZVJlY2FwdGNoYVYySW52aXNpYmxlID0gRm9ybWllUmVjYXB0Y2hhVjJJbnZpc2libGU7XG4iXSwibmFtZXMiOlsicmVjYXB0Y2hhIiwiRm9ybWllUmVjYXB0Y2hhVjJJbnZpc2libGUiLCJzZXR0aW5ncyIsImZvcm1JZCIsInNpdGVLZXkiLCJiYWRnZSIsImxhbmd1YWdlIiwicmVjYXB0Y2hhU2NyaXB0SWQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiJHNjcmlwdCIsImNyZWF0ZUVsZW1lbnQiLCJpZCIsInNyYyIsImFzeW5jIiwiZGVmZXIiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjaGVja1JlY2FwdGNoYUxvYWQiLCIkZm9ybSIsInF1ZXJ5U2VsZWN0b3IiLCJjb25zb2xlIiwiZXJyb3IiLCIkcGxhY2Vob2xkZXJzIiwicXVlcnlTZWxlY3RvckFsbCIsImxlbmd0aCIsInJlbmRlckNhcHRjaGEiLCJhZGRFdmVudExpc3RlbmVyIiwib25WYWxpZGF0ZSIsImJpbmQiLCJvbkFmdGVyU3VibWl0IiwiJHBsYWNlaG9sZGVyIiwiJGN1cnJlbnRQYWdlIiwiZm9ybSIsImZvcm1UaGVtZSIsImZvckVhY2giLCJjb250YWlucyIsImxvZyIsIiR0b2tlbiIsInJlbW92ZSIsImN1cnJlbnRSZWNhcHRjaGFJZCIsImdldEF0dHJpYnV0ZSIsInJlY2FwdGNoYUlkIiwicmVzZXQiLCJyZW5kZXIiLCJzaXRla2V5Iiwic2l6ZSIsImNhbGxiYWNrIiwib25WZXJpZnkiLCJvbkV4cGlyZWQiLCJvbkVycm9yIiwic2V0QXR0cmlidXRlIiwiaWZyYW1lIiwiZSIsImdvQmFjayIsImRldGFpbCIsImludmFsaWQiLCJwcmV2ZW50RGVmYXVsdCIsInN1Ym1pdEhhbmRsZXIiLCJleGVjdXRlIiwidG9rZW4iLCJ2YWxpZGF0ZSIsImFmdGVyVmFsaWRhdGUiLCJzdWJtaXRGb3JtIiwic2V0VGltZW91dCIsIndpbmRvdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/captchas/recaptcha-v2-invisible.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/captchas/recaptcha-v2-invisible.js");
/******/ 	
/******/ })()
;