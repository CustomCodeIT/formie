/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/captchas/inc/defer.js":
/*!**************************************!*\
  !*** ./src/js/captchas/inc/defer.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar defer = function defer() {\n  var state = false; // Resolved or not\n\n  var callbacks = [];\n\n  var resolve = function resolve(val) {\n    if (state) {\n      return;\n    }\n\n    state = true;\n\n    for (var i = 0, len = callbacks.length; i < len; i++) {\n      callbacks[i](val);\n    }\n  };\n\n  var then = function then(cb) {\n    if (!state) {\n      callbacks.push(cb);\n      return;\n    }\n\n    cb();\n  };\n\n  var deferred = {\n    resolved: function resolved() {\n      return state;\n    },\n    resolve: resolve,\n    promise: {\n      then: then\n    }\n  };\n  return deferred;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvY2FwdGNoYXMvaW5jL2RlZmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFNQSxLQUFLLEdBQUcsU0FBUkEsS0FBUSxHQUFNO0VBQ2hCLElBQUlDLEtBQUssR0FBRyxLQUFaLENBRGdCLENBQ0c7O0VBRW5CLElBQU1DLFNBQVMsR0FBRyxFQUFsQjs7RUFFQSxJQUFNQyxPQUFPLEdBQUcsU0FBVkEsT0FBVSxDQUFDQyxHQUFELEVBQVM7SUFDckIsSUFBSUgsS0FBSixFQUFXO01BQ1A7SUFDSDs7SUFFREEsS0FBSyxHQUFHLElBQVI7O0lBRUEsS0FBSyxJQUFJSSxDQUFDLEdBQUcsQ0FBUixFQUFXQyxHQUFHLEdBQUdKLFNBQVMsQ0FBQ0ssTUFBaEMsRUFBd0NGLENBQUMsR0FBR0MsR0FBNUMsRUFBaURELENBQUMsRUFBbEQsRUFBc0Q7TUFDbERILFNBQVMsQ0FBQ0csQ0FBRCxDQUFULENBQWFELEdBQWI7SUFDSDtFQUNKLENBVkQ7O0VBWUEsSUFBTUksSUFBSSxHQUFHLFNBQVBBLElBQU8sQ0FBQ0MsRUFBRCxFQUFRO0lBQ2pCLElBQUksQ0FBQ1IsS0FBTCxFQUFZO01BQ1JDLFNBQVMsQ0FBQ1EsSUFBVixDQUFlRCxFQUFmO01BQ0E7SUFDSDs7SUFFREEsRUFBRTtFQUNMLENBUEQ7O0VBU0EsSUFBTUUsUUFBUSxHQUFHO0lBQ2JDLFFBRGEsc0JBQ0Y7TUFDUCxPQUFPWCxLQUFQO0lBQ0gsQ0FIWTtJQUliRSxPQUFPLEVBQVBBLE9BSmE7SUFLYlUsT0FBTyxFQUFFO01BQ0xMLElBQUksRUFBSkE7SUFESztFQUxJLENBQWpCO0VBVUEsT0FBT0csUUFBUDtBQUNILENBckNEOztBQXVDQSxpRUFBZVgsS0FBZiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy9jYXB0Y2hhcy9pbmMvZGVmZXIuanM/Y2Q1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkZWZlciA9ICgpID0+IHtcbiAgICBsZXQgc3RhdGUgPSBmYWxzZTsgLy8gUmVzb2x2ZWQgb3Igbm90XG5cbiAgICBjb25zdCBjYWxsYmFja3MgPSBbXTtcblxuICAgIGNvbnN0IHJlc29sdmUgPSAodmFsKSA9PiB7XG4gICAgICAgIGlmIChzdGF0ZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgc3RhdGUgPSB0cnVlO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBsZW4gPSBjYWxsYmFja3MubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIGNhbGxiYWNrc1tpXSh2YWwpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IHRoZW4gPSAoY2IpID0+IHtcbiAgICAgICAgaWYgKCFzdGF0ZSkge1xuICAgICAgICAgICAgY2FsbGJhY2tzLnB1c2goY2IpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY2IoKTtcbiAgICB9O1xuXG4gICAgY29uc3QgZGVmZXJyZWQgPSB7XG4gICAgICAgIHJlc29sdmVkKCkge1xuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgICAgICB9LFxuICAgICAgICByZXNvbHZlLFxuICAgICAgICBwcm9taXNlOiB7XG4gICAgICAgICAgICB0aGVuLFxuICAgICAgICB9LFxuICAgIH07XG5cbiAgICByZXR1cm4gZGVmZXJyZWQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBkZWZlcjtcbiJdLCJuYW1lcyI6WyJkZWZlciIsInN0YXRlIiwiY2FsbGJhY2tzIiwicmVzb2x2ZSIsInZhbCIsImkiLCJsZW4iLCJsZW5ndGgiLCJ0aGVuIiwiY2IiLCJwdXNoIiwiZGVmZXJyZWQiLCJyZXNvbHZlZCIsInByb21pc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/captchas/inc/defer.js\n");

/***/ }),

/***/ "./src/js/captchas/inc/recaptcha.js":
/*!******************************************!*\
  !*** ./src/js/captchas/inc/recaptcha.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRecaptcha\": () => (/* binding */ createRecaptcha),\n/* harmony export */   \"recaptcha\": () => (/* binding */ recaptcha),\n/* harmony export */   \"recaptchaEnterprise\": () => (/* binding */ recaptchaEnterprise)\n/* harmony export */ });\n/* harmony import */ var _defer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defer */ \"./src/js/captchas/inc/defer.js\");\n\nvar ownProp = Object.prototype.hasOwnProperty;\nfunction createRecaptcha() {\n  var enterprise = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var deferred = (0,_defer__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // In order to handle multiple recaptchas on a page, store all renderers (promises)\n  // in a central store. When reCAPTCHA is loaded, notify all promises that it's ready.\n\n  if (!window.recaptchaRenderers) {\n    window.recaptchaRenderers = [];\n  } // Store the promise in our renderers store\n\n\n  window.recaptchaRenderers.push(deferred);\n  return {\n    notify: function notify() {\n      // Be sure to notify all renderers that reCAPTCHA is ready, as soon as at least one is ready\n      // As is - as soon as `window.grecaptcha` is available.\n      for (var i = 0, len = window.recaptchaRenderers.length; i < len; i++) {\n        window.recaptchaRenderers[i].resolve();\n      }\n    },\n    wait: function wait() {\n      return deferred.promise;\n    },\n    render: function render(ele, options, cb) {\n      this.wait().then(function () {\n        if (enterprise) {\n          cb(window.grecaptcha.enterprise.render(ele, options));\n        } else {\n          cb(window.grecaptcha.render(ele, options));\n        }\n      });\n    },\n    reset: function reset(widgetId) {\n      if (typeof widgetId === 'undefined') {\n        return;\n      }\n\n      this.assertLoaded();\n\n      if (enterprise) {\n        this.wait().then(function () {\n          return window.grecaptcha.enterprise.reset(widgetId);\n        });\n      } else {\n        this.wait().then(function () {\n          return window.grecaptcha.reset(widgetId);\n        });\n      }\n    },\n    execute: function execute(widgetId) {\n      if (typeof widgetId === 'undefined') {\n        return;\n      }\n\n      this.assertLoaded();\n\n      if (enterprise) {\n        this.wait().then(function () {\n          return window.grecaptcha.enterprise.execute(widgetId);\n        });\n      } else {\n        this.wait().then(function () {\n          return window.grecaptcha.execute(widgetId);\n        });\n      }\n    },\n    executeV3: function executeV3(siteKey) {\n      if (typeof siteKey === 'undefined') {\n        return;\n      }\n\n      this.assertLoaded();\n      return window.grecaptcha.execute(siteKey);\n    },\n    checkRecaptchaLoad: function checkRecaptchaLoad() {\n      if (ownProp.call(window, 'grecaptcha') && ownProp.call(window.grecaptcha, 'render')) {\n        this.notify();\n      }\n    },\n    assertLoaded: function assertLoaded() {\n      if (!deferred.resolved()) {\n        throw new Error('ReCAPTCHA has not been loaded');\n      }\n    }\n  };\n}\nvar recaptcha = createRecaptcha();\nvar recaptchaEnterprise = createRecaptcha(true);\n\nif (typeof window !== 'undefined') {\n  window.formieRecaptchaOnLoadCallback = recaptcha.notify;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QW1EZ0I7TUFDZixJQUFJLE9BQU9BLE9BQVAsS0FBbUIsV0FBdkIsRUFBb0M7UUFDaEM7TUFDSDs7TUFFRCxLQUFLSCxZQUFMO01BQ0EsT0FBT2xCLE1BQU0sQ0FBQ2UsVUFBUCxDQUFrQkksT0FBbEIsQ0FBMEJFLE9BQTFCLENBQVA7SUFDSCxDQTFERTtJQTRESEMsa0JBNURHLGdDQTREa0I7TUFDakIsSUFBSTdCLE9BQU8sQ0FBQzhCLElBQVIsQ0FBYXZCLE1BQWIsRUFBcUIsWUFBckIsS0FBc0NQLE9BQU8sQ0FBQzhCLElBQVIsQ0FBYXZCLE1BQU0sQ0FBQ2UsVUFBcEIsRUFBZ0MsUUFBaEMsQ0FBMUMsRUFBcUY7UUFDakYsS0FBS1osTUFBTDtNQUNIO0lBQ0osQ0FoRUU7SUFrRUhlLFlBbEVHLDBCQWtFWTtNQUNYLElBQUksQ0FBQ25CLFFBQVEsQ0FBQ3lCLFFBQVQsRUFBTCxFQUEwQjtRQUN0QixNQUFNLElBQUlDLEtBQUosQ0FBVSwrQkFBVixDQUFOO01BQ0g7SUFDSjtFQXRFRSxDQUFQO0FBd0VIO0FBRU0sSUFBTUMsU0FBUyxHQUFHN0IsZUFBZSxFQUFqQztBQUNBLElBQU04QixtQkFBbUIsR0FBRzlCLGVBQWUsQ0FBQyxJQUFELENBQTNDOztBQUVQLElBQUksT0FBT0csTUFBUCxLQUFrQixXQUF0QixFQUFtQztFQUMvQkEsTUFBTSxDQUFDNEIsNkJBQVAsR0FBdUNGLFNBQVMsQ0FBQ3ZCLE1BQWpEO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvY2FwdGNoYXMvaW5jL3JlY2FwdGNoYS5qcz8zMTRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZlciBmcm9tICcuL2RlZmVyJztcblxuY29uc3Qgb3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSZWNhcHRjaGEoZW50ZXJwcmlzZSA9IGZhbHNlKSB7XG4gICAgY29uc3QgZGVmZXJyZWQgPSBkZWZlcigpO1xuXG4gICAgLy8gSW4gb3JkZXIgdG8gaGFuZGxlIG11bHRpcGxlIHJlY2FwdGNoYXMgb24gYSBwYWdlLCBzdG9yZSBhbGwgcmVuZGVyZXJzIChwcm9taXNlcylcbiAgICAvLyBpbiBhIGNlbnRyYWwgc3RvcmUuIFdoZW4gcmVDQVBUQ0hBIGlzIGxvYWRlZCwgbm90aWZ5IGFsbCBwcm9taXNlcyB0aGF0IGl0J3MgcmVhZHkuXG4gICAgaWYgKCF3aW5kb3cucmVjYXB0Y2hhUmVuZGVyZXJzKSB7XG4gICAgICAgIHdpbmRvdy5yZWNhcHRjaGFSZW5kZXJlcnMgPSBbXTtcbiAgICB9XG5cbiAgICAvLyBTdG9yZSB0aGUgcHJvbWlzZSBpbiBvdXIgcmVuZGVyZXJzIHN0b3JlXG4gICAgd2luZG93LnJlY2FwdGNoYVJlbmRlcmVycy5wdXNoKGRlZmVycmVkKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIG5vdGlmeSgpIHtcbiAgICAgICAgICAgIC8vIEJlIHN1cmUgdG8gbm90aWZ5IGFsbCByZW5kZXJlcnMgdGhhdCByZUNBUFRDSEEgaXMgcmVhZHksIGFzIHNvb24gYXMgYXQgbGVhc3Qgb25lIGlzIHJlYWR5XG4gICAgICAgICAgICAvLyBBcyBpcyAtIGFzIHNvb24gYXMgYHdpbmRvdy5ncmVjYXB0Y2hhYCBpcyBhdmFpbGFibGUuXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gd2luZG93LnJlY2FwdGNoYVJlbmRlcmVycy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5yZWNhcHRjaGFSZW5kZXJlcnNbaV0ucmVzb2x2ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHdhaXQoKSB7XG4gICAgICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW5kZXIoZWxlLCBvcHRpb25zLCBjYikge1xuICAgICAgICAgICAgdGhpcy53YWl0KCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGVudGVycHJpc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgY2Iod2luZG93LmdyZWNhcHRjaGEuZW50ZXJwcmlzZS5yZW5kZXIoZWxlLCBvcHRpb25zKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY2Iod2luZG93LmdyZWNhcHRjaGEucmVuZGVyKGVsZSwgb3B0aW9ucykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlc2V0KHdpZGdldElkKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHdpZGdldElkID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5hc3NlcnRMb2FkZWQoKTtcblxuICAgICAgICAgICAgaWYgKGVudGVycHJpc2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLndhaXQoKS50aGVuKCgpID0+IHsgcmV0dXJuIHdpbmRvdy5ncmVjYXB0Y2hhLmVudGVycHJpc2UucmVzZXQod2lkZ2V0SWQpOyB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy53YWl0KCkudGhlbigoKSA9PiB7IHJldHVybiB3aW5kb3cuZ3JlY2FwdGNoYS5yZXNldCh3aWRnZXRJZCk7IH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGV4ZWN1dGUod2lkZ2V0SWQpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygd2lkZ2V0SWQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmFzc2VydExvYWRlZCgpO1xuXG4gICAgICAgICAgICBpZiAoZW50ZXJwcmlzZSkge1xuICAgICAgICAgICAgICAgIHRoaXMud2FpdCgpLnRoZW4oKCkgPT4geyByZXR1cm4gd2luZG93LmdyZWNhcHRjaGEuZW50ZXJwcmlzZS5leGVjdXRlKHdpZGdldElkKTsgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMud2FpdCgpLnRoZW4oKCkgPT4geyByZXR1cm4gd2luZG93LmdyZWNhcHRjaGEuZXhlY3V0ZSh3aWRnZXRJZCk7IH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGV4ZWN1dGVWMyhzaXRlS2V5KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHNpdGVLZXkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmFzc2VydExvYWRlZCgpO1xuICAgICAgICAgICAgcmV0dXJuIHdpbmRvdy5ncmVjYXB0Y2hhLmV4ZWN1dGUoc2l0ZUtleSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgY2hlY2tSZWNhcHRjaGFMb2FkKCkge1xuICAgICAgICAgICAgaWYgKG93blByb3AuY2FsbCh3aW5kb3csICdncmVjYXB0Y2hhJykgJiYgb3duUHJvcC5jYWxsKHdpbmRvdy5ncmVjYXB0Y2hhLCAncmVuZGVyJykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGFzc2VydExvYWRlZCgpIHtcbiAgICAgICAgICAgIGlmICghZGVmZXJyZWQucmVzb2x2ZWQoKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignUmVDQVBUQ0hBIGhhcyBub3QgYmVlbiBsb2FkZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xufVxuXG5leHBvcnQgY29uc3QgcmVjYXB0Y2hhID0gY3JlYXRlUmVjYXB0Y2hhKCk7XG5leHBvcnQgY29uc3QgcmVjYXB0Y2hhRW50ZXJwcmlzZSA9IGNyZWF0ZVJlY2FwdGNoYSh0cnVlKTtcblxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgd2luZG93LmZvcm1pZVJlY2FwdGNoYU9uTG9hZENhbGxiYWNrID0gcmVjYXB0Y2hhLm5vdGlmeTtcbn1cbiJdLCJuYW1lcyI6WyJkZWZlciIsIm93blByb3AiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNyZWF0ZVJlY2FwdGNoYSIsImVudGVycHJpc2UiLCJkZWZlcnJlZCIsIndpbmRvdyIsInJlY2FwdGNoYVJlbmRlcmVycyIsInB1c2giLCJub3RpZnkiLCJpIiwibGVuIiwibGVuZ3RoIiwicmVzb2x2ZSIsIndhaXQiLCJwcm9taXNlIiwicmVuZGVyIiwiZWxlIiwib3B0aW9ucyIsImNiIiwidGhlbiIsImdyZWNhcHRjaGEiLCJyZXNldCIsIndpZGdldElkIiwiYXNzZXJ0TG9hZGVkIiwiZXhlY3V0ZSIsImV4ZWN1dGVWMyIsInNpdGVLZXkiLCJjaGVja1JlY2FwdGNoYUxvYWQiLCJjYWxsIiwicmVzb2x2ZWQiLCJFcnJvciIsInJlY2FwdGNoYSIsInJlY2FwdGNoYUVudGVycHJpc2UiLCJmb3JtaWVSZWNhcHRjaGFPbkxvYWRDYWxsYmFjayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/captchas/inc/recaptcha.js\n");

/***/ }),

/***/ "./src/js/captchas/recaptcha-enterprise.js":
/*!*************************************************!*\
  !*** ./src/js/captchas/recaptcha-enterprise.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FormieRecaptchaEnterprise\": () => (/* binding */ FormieRecaptchaEnterprise)\n/* harmony export */ });\n/* harmony import */ var _inc_recaptcha__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inc/recaptcha */ \"./src/js/captchas/inc/recaptcha.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utils */ \"./src/js/utils/utils.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\nvar FormieRecaptchaEnterprise = /*#__PURE__*/function () {\n  function FormieRecaptchaEnterprise() {\n    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, FormieRecaptchaEnterprise);\n\n    this.formId = settings.formId;\n    this.siteKey = settings.siteKey;\n    this.badge = settings.badge;\n    this.language = settings.language;\n    this.recaptchaScriptId = 'FORMIE_RECAPTCHA_SCRIPT'; // Fetch and attach the script only once - this is in case there are multiple forms on the page.\n    // They all go to a single callback which resolves its loaded state\n\n    if (!document.getElementById(this.recaptchaScriptId)) {\n      var $script = document.createElement('script');\n      $script.id = this.recaptchaScriptId;\n      $script.src = \"https://www.google.com/recaptcha/enterprise.js?onload=formieRecaptchaOnLoadCallback&render=explicit&hl=\".concat(this.language);\n      $script.async = true;\n      $script.defer = true;\n      document.body.appendChild($script);\n    } // Wait for/ensure recaptcha script has been loaded\n\n\n    _inc_recaptcha__WEBPACK_IMPORTED_MODULE_0__.recaptchaEnterprise.checkRecaptchaLoad();\n    this.$form = document.querySelector(\"#\".concat(this.formId));\n\n    if (!this.$form) {\n      console.error(\"Unable to find form #\".concat(this.formId));\n      return;\n    } // Get the instance of Formie's base JS\n\n\n    this.form = this.$form.form; // We can have multiple captchas per form, so store them and render only when we need\n\n    this.$placeholders = this.$form.querySelectorAll('[data-recaptcha-placeholder]');\n\n    if (!this.$placeholders) {\n      console.error(\"Unable to find any ReCAPTCHA placeholders for #\".concat(this.formId));\n      return;\n    } // Render the captcha for just this page\n\n\n    this.renderCaptcha(); // Attach a custom event listener on the form\n\n    this.form.addEventListener(this.$form, (0,_utils_utils__WEBPACK_IMPORTED_MODULE_1__.eventKey)('onFormieCaptchaValidate', 'RecaptchaEnterprise'), this.onValidate.bind(this));\n    this.form.addEventListener(this.$form, (0,_utils_utils__WEBPACK_IMPORTED_MODULE_1__.eventKey)('onAfterFormieSubmit', 'RecaptchaEnterprise'), this.onAfterSubmit.bind(this));\n  }\n\n  _createClass(FormieRecaptchaEnterprise, [{\n    key: \"renderCaptcha\",\n    value: function renderCaptcha() {\n      var _this = this;\n\n      // Default to the first placeholder available.\n      // eslint-disable-next-line\n      this.$placeholder = this.$placeholders[0]; // Get the active page\n\n      var $currentPage = null;\n\n      if (this.$form.form.formTheme) {\n        // eslint-disable-next-line\n        $currentPage = this.$form.form.formTheme.$currentPage;\n      } // Get the current page's captcha - find the first placeholder that's non-invisible\n\n\n      this.$placeholders.forEach(function ($placeholder) {\n        if ($currentPage && $currentPage.contains($placeholder)) {\n          _this.$placeholder = $placeholder;\n        }\n      });\n\n      if (this.$placeholder === null) {\n        // This is okay in some instances - notably for multi-page forms where the captcha\n        // should only be shown on the last step. But its nice to log this anyway\n        console.log(\"Unable to find ReCAPTCHA placeholder for #\".concat(this.formId));\n        return;\n      } // Remove any existing token input\n\n\n      var $token = this.$form.querySelector('[name=\"g-recaptcha-response\"]');\n\n      if ($token) {\n        $token.remove();\n      } // Check if we actually need to re-render this, or just refresh it...\n\n\n      var currentRecaptchaId = this.$placeholder.getAttribute('data-recaptcha-id');\n\n      if (currentRecaptchaId !== null) {\n        this.recaptchaId = currentRecaptchaId;\n        _inc_recaptcha__WEBPACK_IMPORTED_MODULE_0__.recaptchaEnterprise.reset(this.recaptchaId);\n        return;\n      } // Render the recaptcha\n\n\n      _inc_recaptcha__WEBPACK_IMPORTED_MODULE_0__.recaptchaEnterprise.render(this.$placeholder, {\n        sitekey: this.siteKey,\n        badge: this.badge,\n        size: 'invisible',\n        callback: this.onVerify.bind(this),\n        'expired-callback': this.onExpired.bind(this),\n        'error-callback': this.onError.bind(this)\n      }, function (id) {\n        _this.recaptchaId = id; // Update the placeholder with our ID, in case we need to re-render it\n\n        _this.$placeholder.setAttribute('data-recaptcha-id', id); // Add a `tabindex` attribute to the iframe to prevent tabbing-to\n\n\n        var iframe = _this.$placeholder.querySelector('iframe');\n\n        if (iframe) {\n          iframe.setAttribute('tabindex', '-1');\n        }\n      });\n    }\n  }, {\n    key: \"onValidate\",\n    value: function onValidate(e) {\n      // Don't validate if we're not submitting (going back, saving)\n      if (this.form.submitAction !== 'submit' || this.$placeholder === null) {\n        return;\n      } // Check if the form has an invalid flag set, don't bother going further\n\n\n      if (e.detail.invalid) {\n        return;\n      }\n\n      e.preventDefault(); // Save for later to trigger real submit\n\n      this.submitHandler = e.detail.submitHandler; // Trigger recaptcha\n\n      _inc_recaptcha__WEBPACK_IMPORTED_MODULE_0__.recaptchaEnterprise.execute(this.recaptchaId);\n    }\n  }, {\n    key: \"onVerify\",\n    value: function onVerify(token) {\n      // Submit the form - we've hijacked it up until now\n      if (this.submitHandler) {\n        // Run the next submit action for the form. TODO: make this better!\n        if (this.submitHandler.validatePayment()) {\n          this.submitHandler.submitForm();\n        }\n      }\n    }\n  }, {\n    key: \"onAfterSubmit\",\n    value: function onAfterSubmit(e) {\n      var _this2 = this;\n\n      // For a multi-page form, we need to remove the current captcha, then render the next pages.\n      // For a single-page form, reset the recaptcha, in case we want to fill out the form again\n      // `renderCaptcha` will deal with both cases\n      setTimeout(function () {\n        _this2.renderCaptcha();\n      }, 300);\n    }\n  }, {\n    key: \"onExpired\",\n    value: function onExpired() {\n      console.log(\"ReCAPTCHA has expired for #\".concat(this.formId, \" - reloading.\"));\n      _inc_recaptcha__WEBPACK_IMPORTED_MODULE_0__.recaptchaEnterprise.reset(this.recaptchaId);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(error) {\n      console.error(\"ReCAPTCHA was unable to load for #\".concat(this.formId));\n    }\n  }]);\n\n  return FormieRecaptchaEnterprise;\n}();\nwindow.FormieRecaptchaEnterprise = FormieRecaptchaEnterprise;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/captchas/recaptcha-enterprise.js\n");

/***/ }),

/***/ "./src/js/utils/utils.js":
/*!*******************************!*\
  !*** ./src/js/utils/utils.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eventKey\": () => (/* binding */ eventKey),\n/* harmony export */   \"isEmpty\": () => (/* binding */ isEmpty),\n/* harmony export */   \"toBoolean\": () => (/* binding */ toBoolean)\n/* harmony export */ });\nvar isEmpty = function isEmpty(obj) {\n  return obj && Object.keys(obj).length === 0 && obj.constructor === Object;\n};\nvar toBoolean = function toBoolean(val) {\n  return !/^(?:f(?:alse)?|no?|0+)$/i.test(val) && !!val;\n};\nvar eventKey = function eventKey(eventName) {\n  var namespace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!namespace) {\n    namespace = Math.random().toString(36).substr(2, 5);\n  }\n\n  return \"\".concat(eventName, \".\").concat(namespace);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvdXRpbHMvdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsT0FBTyxHQUFHLFNBQVZBLE9BQVUsQ0FBU0MsR0FBVCxFQUFjO0VBQ2pDLE9BQU9BLEdBQUcsSUFBSUMsTUFBTSxDQUFDQyxJQUFQLENBQVlGLEdBQVosRUFBaUJHLE1BQWpCLEtBQTRCLENBQW5DLElBQXdDSCxHQUFHLENBQUNJLFdBQUosS0FBb0JILE1BQW5FO0FBQ0gsQ0FGTTtBQUlBLElBQU1JLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQVNDLEdBQVQsRUFBYztFQUNuQyxPQUFPLENBQUMsMkJBQTJCQyxJQUEzQixDQUFnQ0QsR0FBaEMsQ0FBRCxJQUF5QyxDQUFDLENBQUNBLEdBQWxEO0FBQ0gsQ0FGTTtBQUlBLElBQU1FLFFBQVEsR0FBRyxTQUFYQSxRQUFXLENBQVNDLFNBQVQsRUFBc0M7RUFBQSxJQUFsQkMsU0FBa0IsdUVBQU4sSUFBTTs7RUFDMUQsSUFBSSxDQUFDQSxTQUFMLEVBQWdCO0lBQ1pBLFNBQVMsR0FBR0MsSUFBSSxDQUFDQyxNQUFMLEdBQWNDLFFBQWQsQ0FBdUIsRUFBdkIsRUFBMkJDLE1BQTNCLENBQWtDLENBQWxDLEVBQXFDLENBQXJDLENBQVo7RUFDSDs7RUFFRCxpQkFBVUwsU0FBVixjQUF1QkMsU0FBdkI7QUFDSCxDQU5NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3V0aWxzL3V0aWxzLmpzP2Q5ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGlzRW1wdHkgPSBmdW5jdGlvbihvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIE9iamVjdC5rZXlzKG9iaikubGVuZ3RoID09PSAwICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xufTtcblxuZXhwb3J0IGNvbnN0IHRvQm9vbGVhbiA9IGZ1bmN0aW9uKHZhbCkge1xuICAgIHJldHVybiAhL14oPzpmKD86YWxzZSk/fG5vP3wwKykkL2kudGVzdCh2YWwpICYmICEhdmFsO1xufTtcblxuZXhwb3J0IGNvbnN0IGV2ZW50S2V5ID0gZnVuY3Rpb24oZXZlbnROYW1lLCBuYW1lc3BhY2UgPSBudWxsKSB7XG4gICAgaWYgKCFuYW1lc3BhY2UpIHtcbiAgICAgICAgbmFtZXNwYWNlID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDUpO1xuICAgIH1cblxuICAgIHJldHVybiBgJHtldmVudE5hbWV9LiR7bmFtZXNwYWNlfWA7XG59O1xuIl0sIm5hbWVzIjpbImlzRW1wdHkiLCJvYmoiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwiY29uc3RydWN0b3IiLCJ0b0Jvb2xlYW4iLCJ2YWwiLCJ0ZXN0IiwiZXZlbnRLZXkiLCJldmVudE5hbWUiLCJuYW1lc3BhY2UiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/utils/utils.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/captchas/recaptcha-enterprise.js");
/******/ 	
/******/ })()
;