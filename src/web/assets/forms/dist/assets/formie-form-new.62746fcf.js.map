{"version":3,"file":"formie-form-new.62746fcf.js","sources":["../../src/js/formie-form-new.js"],"sourcesContent":["import '@/scss/style.scss';\n\n// import Vue from 'vue';\nimport { createVueApp } from './config.js';\n// import get from 'lodash/get';\n// import isEmpty from 'lodash/isEmpty';\n// import { newId } from './utils/string';\n\n// // Apply our config settings, which do most of the grunt work\n// Vue.use(config);\n\n// //\n// // Vuex\n// //\n\n// import store from './store';\n\n// //\n// // Utils\n// //\n\n// import { generateHandle, getNextAvailableHandle } from './utils/string';\n\n// //\n// // Components\n// //\n\n// import FormBuilder from './components/FormBuilder.vue';\n// import FieldRepeater from './components/FieldRepeater.vue';\n// import FieldGroup from './components/FieldGroup.vue';\n// import DatePreview from './components/DatePreview.vue';\n// import ElementFieldPreview from './components/ElementFieldPreview.vue';\n// import NotificationsBuilder from './components/NotificationsBuilder.vue';\n// import NotificationPreview from './components/NotificationPreview.vue';\n// import NotificationTest from './components/NotificationTest.vue';\n// import FieldSelect from './components/FieldSelect.vue';\n// import IntegrationFieldMapping from './components/IntegrationFieldMapping.vue';\n// import IntegrationFormSettings from './components/IntegrationFormSettings.vue';\n\n// // Globally register components\n// Vue.component('FieldRepeater', FieldRepeater);\n// Vue.component('FieldGroup', FieldGroup);\n// Vue.component('DatePreview', DatePreview);\n// Vue.component('ElementFieldPreview', ElementFieldPreview);\n// Vue.component('NotificationPreview', NotificationPreview);\n// Vue.component('NotificationTest', NotificationTest);\n// Vue.component('FieldSelect', FieldSelect);\n// Vue.component('IntegrationFieldMapping', IntegrationFieldMapping);\n// Vue.component('IntegrationFormSettings', IntegrationFormSettings);\n\n//\n// Start Vue Apps\n//\n\nif (typeof Craft.Formie === typeof undefined) {\n    Craft.Formie = {};\n}\n\nconsole.log('sd')\n\nCraft.Formie.NewForm = Garnish.Base.extend({\n    init(settings) {\n        // Initialise our Vuex stores with data\n        // store.dispatch('formie/setReservedHandles', settings.reservedHandles);\n        // store.dispatch('formie/setMaxFormHandleLength', settings.maxFormHandleLength);\n\n        const app = createVueApp({\n            // store,\n\n            data() {\n                return {\n                    name: '',\n                    handle: '',\n                    handles: [],\n                };\n            },\n\n            // watch: {\n            //     name(val) {\n            //         const maxHandleLength = this.$store.getters['formie/maxFormHandleLength']();\n\n            //         // Let's get smart about generating a handle. Check if its unique - if it isn't, make it unique\n            //         // Be sure to restrict handles well below their limit\n            //         this.handle = getNextAvailableHandle(this.handles, generateHandle(this.name), 0).substr(0, maxHandleLength);\n            //     },\n            // },\n\n            // created() {\n            //     // Fetch all reserved handles\n            //     const reservedHandles = this.$store.getters['formie/reservedHandles']();\n\n            //     this.handles = settings.formHandles.concat(reservedHandles);\n            // },\n\n            // beforeMount() {\n            //     // Load up defaults from Twig\n            //     this.name = this.$el.querySelector('[name=\"title\"]').value;\n            //     this.handle = this.$el.querySelector('[name=\"handle\"]').value;\n            // },\n\n            // mounted() {\n            //     this.$el.querySelector('[name=\"title\"]').focus();\n            // },\n        });\n\n        app.mount('#fui-new-form');\n    },\n});\n"],"names":[],"mappings":"yCAsDA,AAAI,MAAO,OAAM,QAAW,aACxB,OAAM,OAAS,IAGnB,QAAQ,IAAI,IAAI,EAEhB,MAAM,OAAO,QAAU,QAAQ,KAAK,OAAO,CACvC,KAAK,EAAU,CA4CX,AAvCY,EAAa,CAGrB,MAAO,CACH,MAAO,CACH,KAAM,GACN,OAAQ,GACR,QAAS,CAAE,CAC/B,CACa,CA4Bb,CAAS,EAEG,MAAM,eAAe,CAC5B,CACL,CAAC"}